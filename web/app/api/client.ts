/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/authorize": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** ログイン */
        post: operations["authorize"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rooms": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 練習室の取得 */
        get: operations["getRooms"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reservations/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 予約の作成 */
        post: operations["createReservation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reservations/{reservation_id}/delete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** 予約の削除 */
        delete: operations["deleteReservation"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reservations/{reservation_id}/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 予約の更新 */
        put: operations["updateReservation"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reservations/{reservation_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 予約の取得 */
        get: operations["getReservation"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reservations/mine": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 自分の予約を取得 */
        get: operations["getMyReservations"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Room: {
            id: string;
            name: string;
            piano_type: string;
            piano_number: number;
            is_classroom: boolean;
            is_basement: boolean;
            campus_code: string;
            floor: number;
        };
        RoomList: {
            rooms: components["schemas"]["Room"][];
        };
        Reservation: {
            id: number;
            external_id?: string;
            /** @enum {string} */
            campus_code: "1" | "2";
            /** Format: date-time */
            date: string;
            room_id: string;
            from_hour: number;
            from_minute: number;
            to_hour: number;
            to_minute: number;
            booker_name?: string;
            /** Format: date-time */
            created_at: string;
        };
        ReservationList: {
            reservations: components["schemas"]["Reservation"][];
        };
        Authorization: {
            access_token: string;
            refresh_token: string;
        };
        Response: {
            ok: boolean;
            code: number;
            data: Record<string, never>;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    authorize: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    user_id: string;
                    password: string;
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ok: boolean;
                        code: number;
                        data: components["schemas"]["Authorization"];
                    };
                };
            };
        };
    };
    getRooms: {
        parameters: {
            query?: {
                id?: string;
                name?: string;
                piano_number?: number;
                piano_type?: "grand" | "upright" | "none";
                floor?: number;
                is_basement?: boolean;
                campus_code?: "1" | "2";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ok: boolean;
                        code: number;
                        data: {
                            rooms: components["schemas"]["Room"][];
                        };
                    };
                };
            };
        };
    };
    createReservation: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @enum {string} */
                    campus_code: "1" | "2";
                    /** Format: date-time */
                    date: string;
                    from_hour: number;
                    from_minute: number;
                    to_hour: number;
                    to_minute: number;
                    is_auto_select: boolean;
                    room_id?: string;
                    booker_name?: string;
                    piano_numbers?: number[];
                    piano_types?: ("grand" | "upright" | "none")[];
                    floors?: number[];
                    is_basement?: boolean;
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ok: boolean;
                        code: number;
                        data: components["schemas"]["Reservation"];
                    };
                };
            };
        };
    };
    deleteReservation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                reservation_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Response"];
                };
            };
        };
    };
    updateReservation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                reservation_id: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @enum {string} */
                    campus_code: "1" | "2";
                    /** Format: date-time */
                    date: string;
                    from_hour: number;
                    from_minute: string;
                    to_hour: string;
                    to_minute: string;
                    is_auto_select: boolean;
                    room_id?: string;
                    booker_name?: string;
                    piano_numbers?: number[];
                    piano_types?: ("grand" | "upright" | "none")[];
                    floors?: number[];
                    is_basement?: boolean;
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Response"];
                };
            };
        };
    };
    getReservation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                reservation_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ok: boolean;
                        code: number;
                        data: components["schemas"]["Reservation"];
                    };
                };
            };
        };
    };
    getMyReservations: {
        parameters: {
            query?: {
                campus_code?: "1" | "2";
                piano_type?: "grand" | "upright" | "none";
                date?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ok: boolean;
                        code: number;
                        data: components["schemas"]["ReservationList"];
                    };
                };
            };
        };
    };
}
