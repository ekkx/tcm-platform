// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: list_user_reservation_ids.sql

package database

import (
	"context"

	"github.com/ekkx/tcmrsv-web/pkg/ulid"
	"github.com/ekkx/tcmrsv-web/pkg/ymd"
)

const listUserReservationIDs = `-- name: ListUserReservationIDs :many
SELECT
    reservations.id
FROM
    reservations
WHERE
    reservations.user_id = $1::ulid
    AND reservations.date >= $2::DATE
ORDER BY
    reservations.id DESC
`

type ListUserReservationIDsParams struct {
	UserID ulid.ULID `json:"user_id"`
	Date   ymd.YMD   `json:"date"`
}

func (q *Queries) ListUserReservationIDs(ctx context.Context, arg ListUserReservationIDsParams) ([]ulid.ULID, error) {
	rows, err := q.db.Query(ctx, listUserReservationIDs, arg.UserID, arg.Date)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []ulid.ULID{}
	for rows.Next() {
		var id ulid.ULID
		if err := rows.Scan(&id); err != nil {
			return nil, err
		}
		items = append(items, id)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
