// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: create_reservation.sql

package database

import (
	"context"

	"github.com/ekkx/tcmrsv-web/pkg/ulid"
	"github.com/ekkx/tcmrsv-web/pkg/ymd"
)

const createReservation = `-- name: CreateReservation :one
INSERT INTO
    reservations (
        id,
        user_id,
        campus_type,
        room_id,
        date,
        from_hour,
        from_minute,
        to_hour,
        to_minute,
        create_time
    )
VALUES
    (
        $1::ulid,
        $2::ulid,
        $3::campus_type,
        $4::TEXT,
        $5::DATE,
        $6::INT,
        $7::INT,
        $8::INT,
        $9::INT,
        NOW()
    )
RETURNING reservations.id
`

type CreateReservationParams struct {
	ID         ulid.ULID  `json:"id"`
	UserID     ulid.ULID  `json:"user_id"`
	CampusType CampusType `json:"campus_type"`
	RoomID     string     `json:"room_id"`
	Date       ymd.YMD    `json:"date"`
	FromHour   int32      `json:"from_hour"`
	FromMinute int32      `json:"from_minute"`
	ToHour     int32      `json:"to_hour"`
	ToMinute   int32      `json:"to_minute"`
}

func (q *Queries) CreateReservation(ctx context.Context, arg CreateReservationParams) (ulid.ULID, error) {
	row := q.db.QueryRow(ctx, createReservation,
		arg.ID,
		arg.UserID,
		arg.CampusType,
		arg.RoomID,
		arg.Date,
		arg.FromHour,
		arg.FromMinute,
		arg.ToHour,
		arg.ToMinute,
	)
	var id ulid.ULID
	err := row.Scan(&id)
	return id, err
}
